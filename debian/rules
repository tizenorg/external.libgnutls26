#! /usr/bin/make -f
# Build the gnutls package for Debian.

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk

#Disable c++ library (cxx)
#DEB_CONFIGURE_EXTRA_FLAGS = --enable-ld-version-script --enable-cxx --without-lzo --cache-file=$(CURDIR)/config.cache --with-libgcrypt --with-packager=Debian --with-packager-bug-reports=http://bugs.debian.org.org/ --with-packager-version="$(DEB_VERSION)" --with-included-libtasn1 

DEB_CONFIGURE_EXTRA_FLAGS = --enable-ld-version-script --disable-cxx --without-lzo --cache-file=$(CURDIR)/config.cache --with-libgcrypt --with-packager=Debian --with-packager-bug-reports=http://bugs.debian.org.org/ --with-packager-version="$(DEB_VERSION)" --with-included-libtasn1 

DEB_MAKE_CHECK_TARGET = check
DEB_DH_MAKESHLIBS_ARGS_libgnutls26 := -V 'libgnutls26 (>= 2.11.7-0)'
#DEB_DH_MAKESHLIBS_ARGS_guile-gnutls := -V 'guile-gnutls (>= 2.11.7-0)'
#DEB_COMPRESS_EXCLUDE := gnutls.pdf

CFLAGS += -Wall

# pre-clean rule: save gnutls.pdf since it is expensive to regenerate.
# See README.source
#cleanbuilddir/gnutls-doc::
#	if [ -e doc/gnutls.pdf ] ; then mv doc/gnutls.pdf doc/gnutls.pdf.debbackup ; fi


# additional commands for clean
clean::
	mkdir -p m4

	-rm -rf autom4te.cache

	-rm -f tests/stamp-tests
	# stupid conflicts
	-rm -f doc/*.info* lib/po/libgnutls26.pot
	# restore gnutls.pdf
	#if [ -e doc/gnutls.pdf.debbackup ] && [ ! -e doc/gnutls.pdf ] ; then mv doc/gnutls.pdf.debbackup doc/gnutls.pdf ; fi

# additional comands for build rule
build/gnutls-doc::
	$(MAKE) html

# add post deb preparation (including debhelper stuff) actions
# generate symlinks manually and use dh_link to make them policy-conform.
#binary-install/gnutls-doc::
#	cd debian/gnutls-doc && \
#	for i in usr/share/doc/gnutls-doc/html/gnutls*.png ; do \
#		i=`basename "$$i"` ; \
#		ln -s "/usr/share/doc/gnutls-doc/html/$$i" \
#			usr/share/info/ ; \
#	done && \
#	cd ../.. && \
#	dh_link -pgnutls-doc

install/libgnutls-dev::
	find debian/tmp/usr/lib -name "*.la" -exec \
		sed -i -e "s,^dependency_libs=.*,dependency_libs=''," {} +

